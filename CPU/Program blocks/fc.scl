FUNCTION "fc" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_TEMP 
      aux : USInt;
      "null" : Bool;
   END_VAR


BEGIN
	IF NOT "iBEmerencia" THEN
	    #aux := "ext".trig := 0;
	    FOR #aux := 1 TO 32 DO
	        "ext".status[#aux] := 0;
	    END_FOR;
	ELSE
	    IF "ext".trig >= 1 AND "ext".trig <= 32 THEN
	        IF "ext".trig >= 15 AND "ext".trig <= 22 AND "ext".selector["ext".trig] THEN
	            "ext".trig := 0;
	        ELSE
	            IF "ext".status["ext".trig] > 0 THEN
	                "ext".status["ext".trig] := 0;
	            ELSE
	                IF NOT "ext".block THEN
	                    "ext".status["ext".trig] += 1;
	                ELSE
	                    CASE "ext".trig OF
	                        1:
	                            IF NOT "ret".switch[1]  THEN //chave para cima
	                                "ext".status["ext".trig] := 1;
	                            ELSE //chave para baixo
	                                IF "ext".status[7] = 1 THEN //CT-1
	                                    "ext".status["ext".trig] := 1;
	                                ELSE
	                                    "ext".trig := 0;
	                                END_IF;
	                            END_IF;
	                        2:
	                            IF NOT "ret".switch[4] THEN //chave para cima
	                                "ext".status["ext".trig] := 1;
	                            ELSE //chave para baixo
	                                IF "ext".status[5] = 1 THEN //RD-1
	                                    "ext".status["ext".trig] := 1;
	                                ELSE
	                                    "ext".trig := 0;
	                                END_IF;
	                            END_IF;
	                        3:
	                            IF NOT "ret".switch[10] THEN //chave para cima
	                                IF NOT "ret".switch[11] THEN //chave para cima
	                                    IF "ext".status[5] = 1 THEN //RD-1
	                                        "ext".status["ext".trig] := 1;
	                                    ELSE
	                                        "ext".trig := 0;
	                                    END_IF;
	                                ELSE //chave para baixo
	                                    IF NOT "ret".switch[12] THEN //chave para cima
	                                        IF NOT "iSP1" THEN //SP-1
	                                            "ext".status["ext".trig] := 1;
	                                        ELSE
	                                            "ext".trig := 0;
	                                        END_IF;
	                                    ELSE //chave para baixo
	                                        IF NOT "iSP2" THEN //SP-2
	                                            "ext".status["ext".trig] := 1;
	                                        ELSE
	                                            "ext".trig := 0;
	                                        END_IF;
	                                    END_IF;
	                                END_IF;
	                            ELSE //chave para baixo
	                                IF NOT "ret".switch[15] THEN //chave para cima
	                                    IF "ext".status[10] = 1 THEN //CT-4
	                                        "ext".status["ext".trig] := 1;
	                                    ELSE
	                                        "ext".trig := 0;
	                                    END_IF;
	                                ELSE //chave para baixo
	                                    IF NOT ("iTM1a" AND "iTM1b") THEN //TM1
	                                        "ext".status["ext".trig] := 1;
	                                    ELSE
	                                        "ext".trig := 0;
	                                    END_IF;
	                                END_IF;
	                            END_IF;
	                        4:
	                            IF "ret".switch[16] THEN //chave para cima
	                                IF "ret".switch[14] THEN //chave para cima
	                                    IF "ext".status[10] = 1 THEN //CT-4
	                                        "ext".status["ext".trig] := 1;
	                                    ELSE
	                                        "ext".trig := 0;
	                                    END_IF;
	                                ELSE //chave para baixo
	                                    IF "ext".status[12] = 1 THEN //PL-1
	                                        "ext".status["ext".trig] := 1;
	                                    ELSE
	                                        "ext".trig := 0;
	                                    END_IF;
	                                END_IF;
	                            ELSE //chave para baixo
	                                IF NOT ("iTM1a" AND "iTM1b") THEN //TM1
	                                    "ext".status["ext".trig] := 1;
	                                ELSE
	                                    "ext".trig := 0;
	                                END_IF;
	                            END_IF;
	                        5:
	                            IF "ext".status[13] = 1 THEN //SC1-EXA
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        6:
	                            IF NOT "ret".switch[5] THEN //chave para cima
	                                IF "ext".status[2] = 1 THEN //EL-2
	                                    "ext".status["ext".trig] := 1;
	                                ELSE
	                                    "ext".trig := 0;
	                                END_IF;
	                            ELSE //chave para baixo
	                                IF "ext".status[3] = 1 THEN //EL-3
	                                    "ext".status["ext".trig] := 1;
	                                ELSE
	                                    "ext".trig := 0;
	                                END_IF;
	                            END_IF;
	                        7:
	                            IF NOT "ret".switch[2] THEN //chave para cima
	                                IF NOT "ret".switch[3] THEN //chave para cima
	                                    IF "ext".status[2] = 1 THEN //EL-2
	                                        "ext".status["ext".trig] := 1;
	                                    ELSE
	                                        "ext".trig := 0;
	                                    END_IF;
	                                ELSE //chave para baixo
	                                    IF "ext".status[12] = 1 THEN //PL-1
	                                        "ext".status["ext".trig] := 1;
	                                    ELSE
	                                        "ext".trig := 0;
	                                    END_IF;
	                                END_IF;
	                            ELSE //chave para baixo
	                                IF NOT "ret".switch[6] THEN //chave para cima
	                                    IF "ext".status[3] = 1 THEN //EL-3
	                                        "ext".status["ext".trig] := 1;
	                                    ELSE
	                                        "ext".trig := 0;
	                                    END_IF;
	                                ELSE //chave para baixo
	                                    IF "ext".status[4] = 1 THEN //EL-4
	                                        "ext".status["ext".trig] := 1;
	                                    ELSE
	                                        "ext".trig := 0;
	                                    END_IF;
	                                END_IF;
	                            END_IF;
	                        8:
	                            IF "ret".switch[8] THEN //chave para cima
	                                IF "ext".status[2] = 1 THEN //EL-2
	                                    "ext".status["ext".trig] := 1;
	                                ELSE
	                                    "ext".trig := 0;
	                                END_IF;
	                            ELSE //chave para baixo
	                                IF "ext".status[3] = 1 THEN //EL-3
	                                    "ext".status["ext".trig] := 1;
	                                ELSE
	                                    "ext".trig := 0;
	                                END_IF;
	                            END_IF;
	                        9:
	                            IF "ret".switch[13] THEN //chave para cima
	                                IF "ext".status[2] = 1 THEN //EL-2
	                                    "ext".status["ext".trig] := 1;
	                                ELSE //chave para baixo
	                                    "ext".trig := 0;
	                                END_IF;
	                            ELSE //chave para baixo
	                                IF "ext".status[3] = 1 THEN //EL-3
	                                    "ext".status["ext".trig] := 1;
	                                ELSE
	                                    "ext".trig := 0;
	                                END_IF;
	                            END_IF;
	                        10:
	                            IF "ext".status[23] = 1 OR
	                                "ext".status[24] = 1 OR
	                                "ext".status[24] = 1
	                            THEN //ESP1..3
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        11:
	                            IF "ret".switch[17] THEN //chave para cima
	                                IF "ext".status[3] = 1 THEN //EL-3
	                                    "ext".status["ext".trig] := 1;
	                                ELSE
	                                    "ext".trig := 0;
	                                END_IF;
	                            ELSE //chave para baixo
	                                IF "ext".status[4] = 1 THEN //EL-4
	                                    "ext".status["ext".trig] := 1;
	                                ELSE
	                                    "ext".trig := 0;
	                                END_IF;
	                            END_IF;
	                        12:
	                            IF "ext".status[26] = 1 AND
	                                "ext".status[27] = 1 THEN //ELR1e2
	                                IF "ret".switch[7] THEN //chave para cima
	                                    IF "ext".status[2] = 1 THEN //EL-2
	                                        "ext".status["ext".trig] := 1;
	                                    ELSE //chave para baixo
	                                        "ext".trig := 0;
	                                    END_IF;
	                                ELSE //chave para baixo
	                                    IF "ret".switch[9] THEN //chave para cima
	                                        IF "ext".status[3] = 1 THEN //EL-3
	                                            "ext".status["ext".trig] := 1;
	                                        ELSE
	                                            "ext".trig := 0;
	                                        END_IF;
	                                    ELSE //chave para baixo
	                                        IF "ext".status[4] = 1 THEN //EL-4
	                                            "ext".status["ext".trig] := 1;
	                                        ELSE
	                                            "ext".trig := 0;
	                                        END_IF;
	                                    END_IF;
	                                END_IF;
	                            ELSE //chave para baixo
	                                "ext".trig := 0;
	                            END_IF;
	                        13:
	                            IF "ext".status[14] = 1 THEN //SC1-ECL
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        14:
	                            IF "ext".status[6] = 1 THEN //RD-2
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        23:
	                            IF "iSA1" THEN //SA-1
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        24:
	                            IF "iSA2" THEN //SA-2
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        25:
	                            IF "iSA3" THEN //SA-3
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        27:
	                            IF "ext".status[31] = 1 THEN //BAT-1
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        28:
	                            IF "ext".status[32] = 1 THEN //SLR-1
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        29:
	                            IF "ext".status[28] = 1 THEN //ELR-3
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        32:
	                            IF "ext".status[4] = 1 THEN //EL-4
	                                "ext".status["ext".trig] := 1;
	                            ELSE
	                                "ext".trig := 0;
	                            END_IF;
	                        ELSE
	                            "ext".status["ext".trig] := 1;
	                    END_CASE;
	                END_IF;
	            END_IF;
	        END_IF;
	    ELSIF "ext".trig > 0 THEN
	        "ext".trig := 0;
	    END_IF;
	    "ext".trig := 0;
	END_IF;
	
	REGION Starters
	    "sf" //01_EL-1 (inversor)
	    (
	        id          := 1,
	        prm         := 2,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iEL-1",
	        outputP     := "oEL-1s",
	        output      := "oEL-1f"
	    );
	    
	    "sf" //02_EL-2 (Soft 1 Tipo 1)
	    (
	        id          := 2,
	        prm         := 3,
	        inputAM     := false,
	        inputSoftP  := "iSSP1p",
	        inputP      := "iEL-2p",
	        inputSoft   := "iSSP1",
	        input       := "iEL-2",
	        outputP     := "oEL-2p",
	        output      := "oEL-2"
	    );
	    
	    "sf" //03_EL-3 (inversor)
	    (
	        id          := 3,
	        prm         := 2,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iEL-3",
	        outputP     := "oEL-3s",
	        output      := "oEL-3f"
	    );
	    
	    "sf" //04_EL-4 (Soft 1 Tipo 1)
	    (
	        id          := 4,
	        prm         := 3,
	        inputAM     := false,
	        inputSoftP  := "iSSP1p",
	        inputP      := "iEL-4p",
	        inputSoft   := "iSSP1",
	        input       := "iEL-4",
	        outputP     := "oEL-4p",
	        output      := "oEL-4"
	    );
	    
	    "sf" //05_RD-1 (Comum)
	    (
	        id          := 5,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iRD-1",
	        outputP     := #null,
	        output      := "oRD-1"
	    );
	    
	    "sf" //06_RD-2 (Comum)
	    (
	        id          := 6,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iRD-2",
	        outputP     := #null,
	        output      := "oRD-2"
	    );
	    
	    "sf" //07_CT-1 (inversor)
	    (
	        id          := 7,
	        prm         := 2,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iCT-1",
	        outputP     := "oCT-1s",
	        output      := "oCT-1f"
	    );
	    
	    "sf" //08_CT-2 (inversor)
	    (
	        id          := 8,
	        prm         := 2,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iCT-2",
	        outputP     := "oCT-2s",
	        output      := "oCT-2f"
	    );
	    
	    "sf" //09_CT-3 (inversor)
	    (
	        id          := 9,
	        prm         := 2,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iCT-3",
	        outputP     := "oCT-3s",
	        output      := "oCT-3f"
	    );
	    
	    "sf" //10_CT-4 (Soft 2 Tipo 1)
	    (
	        id          := 10,
	        prm         := 3,
	        inputAM     := false,
	        inputSoftP  := "iSSP2p",
	        inputP      := "iCT-4p",
	        inputSoft   := "iSSP2",
	        input       := "iCT-4",
	        outputP     := "oCT-4p",
	        output      := "oCT-4"
	    );
	    
	    "sf" //11_CT-5 (Comum)
	    (
	        id          := 11,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iCT-5",
	        outputP     := #null,
	        output      := "oCT-5"
	    );
	    
	    "sf" //12_PL-1 (Comum)
	    (
	        id          := 12,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iPL-1",
	        outputP     := #null,
	        output      := "oPL-1"
	    );
	    
	    "sf" //13_SC1-EXA (Soft 1 Tipo 2)
	    (
	        id          := 13,
	        prm         := 3,
	        inputAM     := false,
	        inputSoftP  := "iSSP1p",
	        inputP      := "iSC1-EXAp",
	        inputSoft   := "iSSP1",
	        input       := "iSC1-EXA",
	        outputP     := "oSC1-EXAp",
	        output      := "oSC1-EXA"
	    );
	    
	    "sf" //14_SC1-ECL (Comum)
	    (
	        id          := 14,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iSC1-ECL",
	        outputP     := #null,
	        output      := "oSC1-ECL"
	    );
	    
	    "sf" //15_AE1-SA1 (Soft 2 Tipo 2) (Auto.)
	    (
	        id          := 15,
	        prm         := 3,
	        inputAM     := "iAE1-SA1a",
	        inputSoftP  := "iSSP2p",
	        inputP      := "iAE1-SA1p",
	        inputSoft   := "iSSP2",
	        input       := "iAE1-SA1",
	        outputP     := "oAE1-SA1p",
	        output      := "oAE1-SA1"
	    );
	    
	    "sf" //16_AE2-SA1 (Soft 1 Tipo 2) (Auto.)
	    (
	        id          := 16,
	        prm         := 3,
	        inputAM     := "iAE2-SA1a",
	        inputSoftP  := "iSSP1p",
	        inputP      := "iAE2-SA1p",
	        inputSoft   := "iSSP1",
	        input       := "iAE2-SA1",
	        outputP     := "oAE2-SA1p",
	        output      := "oAE2-SA1"
	    );
	    
	    "sf" //17_AE1-SA2 (Soft 2 Tipo 2) (Auto.)
	    (
	        id          := 17,
	        prm         := 3,
	        inputAM     := "iAE1-SA2a",
	        inputSoftP  := "iSSP2p",
	        inputP      := "iAE1-SA2p"  ,
	        inputSoft   := "iSSP2",
	        input       := "iAE1-SA2",
	        outputP     := "oAE1-SA2p",
	        output      := "oAE1-SA2"
	    );
	    
	    "sf" //18_AE2-SA2 (Soft 1 Tipo 2) (Auto.)
	    (
	        id          := 18,
	        prm         := 3,
	        inputAM     := "iAE2-SA2a",
	        inputSoftP  := "iSSP1p",
	        inputP      := "iAE2-SA2p",
	        inputSoft   := "iSSP1",
	        input       := "iAE2-SA2",
	        outputP     := "oAE2-SA2p",
	        output      := "oAE2-SA2"
	    );
	    
	    "sf" //19_AE1-SA3 (Soft 2 Tipo 2) (Auto.)
	    (
	        id          := 19,
	        prm         := 3,
	        inputAM     := "iAE1-SA3a",
	        inputSoftP  := "iSSP2p",
	        inputP      := "iAE1-SA3p",
	        inputSoft   := "iSSP2",
	        input       := "iAE1-SA3",
	        outputP     := "oAE1-SA3p",
	        output      := "oAE1-SA3"
	    );
	    
	    "sf" //20_AE2-SA3 (Soft 1 Tipo 2) (Auto.)
	    (
	        id          := 20,
	        prm         := 3,
	        inputAM     := "iAE2-SA3a",
	        inputSoftP  := "iSSP1p",
	        inputP      := "iAE2-SA3p",
	        inputSoft   := "iSSP1",
	        input       := "iAE2-SA3",
	        outputP     := "oAE2-SA3p",
	        output      := "oAE2-SA3"
	    );
	    
	    "sf" //21_AER-SP1 (Soft 2 Tipo 2) (Auto.)
	    (
	        id          := 21,
	        prm         := 3,
	        inputAM     := "iAER-SP1a",
	        inputSoftP  := "iSSP2p",
	        inputP      := "iAER-SP1p",
	        inputSoft   := "iSSP2",
	        input       := "iAER-SP1",
	        outputP     := "oAER-SP1p",
	        output      := "oAER-SP1"
	    );
	    
	    "sf" //22_AER-SP2 (Soft 2 Tipo 2) (Auto.)
	    (
	        id          := 22,
	        prm         := 3,
	        inputAM     := "iAER-SP2a",
	        inputSoftP  := "iSSP2p",
	        inputP      := "iAER-SP2p",
	        inputSoft   := "iSSP2",
	        input       := "iAER-SP2",
	        outputP     := "oAER-SP2p",
	        output      := "oAER-SP2"
	    );
	    
	    "sf" //23_ESP-EG1 (Comum)
	    (
	        id          := 23,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iESP-EG1",
	        outputP     := #null,
	        output      := "oESP-EG1"
	    );
	    
	    "sf" //24_ESP-EG2 (Comum)
	    (
	        id          := 24,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iESP-EG2",
	        outputP     := #null,
	        output      := "oESP-EG2"
	    );
	    
	    "sf" //25_ESP-EG3 (Comum)
	    (
	        id          := 25,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iESP-EG3",
	        outputP     := #null,
	        output      := "oESP-EG3"
	    );
	    
	    "sf" //26_ELR-1 (Comum)
	    (
	        id          := 26,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iELR-1",
	        outputP     := #null,
	        output      := "oELR-2"
	    );
	    
	    "sf" //27_ELR-2 (Comum)
	    (
	        id          := 27,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iELR-2",
	        outputP     := #null,
	        output      := "oELR-2"
	    );
	    
	    "sf" //28_ELR-3 (Comum)
	    (
	        id          := 28,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iELR-3",
	        outputP     := #null,
	        output      := "oELR-3"
	    );
	    
	    "sf" //29_TOR-1 (Comum)
	    (
	        id          := 29,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iTOR-1",
	        outputP     := #null,
	        output      := "oTOR-1"
	    );
	    
	    "sf" //30_EXA-1 (Comum)
	    (
	        id          := 30,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iEXA-1",
	        outputP     := #null,
	        output      := "oEXA-1"
	    );
	    
	    "sf" //31_BAT-1 (Comum)
	    (
	        id          := 31,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iBAT-1",
	        outputP     := #null,
	        output      := "oBAT-1"
	    );
	    
	    "sf" //32_SLR-1 (Comum)
	    (
	        id          := 32,
	        prm         := 1,
	        inputAM     := false,
	        inputSoftP  := false,
	        inputP      := false,
	        inputSoft   := false,
	        input       := "iSLR-1",
	        outputP     := #null,
	        output      := "oSLR-1"
	    );
	
	    REGION Soft Type
	        
	        IF "oEL-2p" OR "oEL-4p" THEN
	            "oSSP1t1" := true;
	        ELSE
	            "oSSP1t1" := false;
	        END_IF;
	        
	        IF "oSC1-EXAp" OR "oAE2-SA1p" OR "oAE2-SA2p" OR "oAE2-SA3p" THEN
	            "oSSP1t2" := true;
	        ELSE
	            "oSSP1t2" := false;
	        END_IF;
	        
	        IF "oCT-4p" THEN
	            "oSSP2t1" := true;
	        ELSE
	            "oSSP2t1" := false;
	        END_IF;
	        
	        IF "oAE1-SA1p" OR "oAE1-SA2p" OR "oAE1-SA3p" OR "oAER-SP1p" OR "oAER-SP2p" THEN
	            "oSSP2t2" := true;
	        ELSE
	            "oSSP2t2" := false;
	        END_IF;
	    END_REGION
	
	END_REGION
	
	#aux := 0;
	FOR #aux := 1 TO 40 DO
	    IF "int".pulse[#aux] THEN
	        "oSirene" := true;
	    END_IF;
	END_FOR;
END_FUNCTION

