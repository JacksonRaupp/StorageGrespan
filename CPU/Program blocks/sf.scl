FUNCTION "sf" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      id : USInt;
      prm : USInt;
      inputAM : Bool;
      inputSoftP : Bool;
      inputP : Bool;
      inputSoft : Bool;
      input : Bool;
   END_VAR

   VAR_IN_OUT 
      outputP : Bool;
      output : Bool;
   END_VAR


BEGIN
	"int".tmp[#id].TP
	(
	    PT := T#1s,
	    IN := "ext".status[#id] = 1 OR #inputSoft
	);
	
	CASE #prm OF
	    1:  // Partida Direta
	        CASE "ext".status[#id] OF
	            0:
	                #output := false;
	            1:
	                IF "int".tmp[#id].Q OR #input THEN
	                    #output := true;
	                ELSE
	                    "ext".status[#id] := 3;
	                END_IF;
	            3:
	                #output := false;
	            ELSE
	                "ext".status[#id] := 0;
	        END_CASE;
	        
	    2:  // Partida por Inversor de frequência
	        CASE "ext".status[#id] OF
	            0:
	                #output := false;
	            1:
	                IF "int".tmp[#id].Q OR #input THEN
	                    #output := true;
	                ELSE
	                    "ext".status[#id] := 3;
	                END_IF;
	            3:
	                #output := false;
	            ELSE
	                "ext".status[#id] := 0;
	        END_CASE;
	        IF NOT "ext".selector[#id] AND #output THEN
	            #outputP := true;
	        ELSE
	            #outputP := false;
	        END_IF;
	
	    3:  // Partida por Soft Starter
	        IF "ext".selector[#id] THEN
	            IF #inputAM AND NOT ("ext".status[#id] = 1) THEN
	                "ext".status[#id] := 1;
	            ELSIF NOT #inputAM THEN
	                "ext".status[#id] := 0;
	            END_IF;
	        END_IF;
	        CASE "ext".status[#id] OF
	            0:
	                #output := #outputP := false;
	                RESET_TIMER("int".tmp[#id]);
	            1:
	                IF NOT (#inputSoft OR #output) THEN
	                    IF (#inputSoftP AND NOT #outputP AND NOT #output) THEN
	                        "ext".status[#id] := 0;
	                    ELSIF ("int".tmp[#id].ET < T#10s AND NOT #output) OR
	                        (#inputP AND #inputSoftP) THEN
	                        #outputP := true;
	                    ELSE
	                        "ext".status[#id] := 3;
	                    END_IF;
	                    IF #inputP AND #inputSoftP THEN
	                        RESET_TIMER("int".tmp[#id]);
	                    END_IF;
	                ELSE
	                    IF "int".tmp[#id].ET < T#1s OR #input THEN
	                        #output := true;
	                    ELSE
	                        "ext".status[#id] := 3;
	                    END_IF;
	                    #outputP := false;
	                END_IF;
	
	            3:
	                #output := #outputP := false;
	            ELSE
	                "ext".status[#id] := 0;
	        END_CASE;
	END_CASE;
	
	IF "ext".status[#id] = 3 AND NOT "int".pulse[#id] THEN
	    "int".pulse[#id] := true;
	ELSIF NOT ("ext".status[#id] = 3) THEN
	    "int".pulse[#id] := false;
	END_IF;
END_FUNCTION

